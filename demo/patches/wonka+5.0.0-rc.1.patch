diff --git a/node_modules/wonka/.merlin b/node_modules/wonka/.merlin
new file mode 100644
index 0000000..45e1399
--- /dev/null
+++ b/node_modules/wonka/.merlin
@@ -0,0 +1,18 @@
+####{BSB GENERATED: NO EDIT
+FLG -ppx '/Volumes/SSD/Github/realtime-rescript-aws/node_modules/bs-platform/darwin/bsc.exe -as-ppx '
+S /Volumes/SSD/Github/realtime-rescript-aws/node_modules/bs-platform/lib/ocaml
+B /Volumes/SSD/Github/realtime-rescript-aws/node_modules/bs-platform/lib/ocaml
+FLG -w +a-4-9-20-40-41-42-50-61-102
+S src
+B lib/bs/src
+S src/include
+B lib/bs/src/include
+S src/include/rebel_js
+B lib/bs/src/include/rebel_js
+S src/include/rebel_native
+B lib/bs/src/include/rebel_native
+S src/web
+B lib/bs/src/web
+S src/helpers
+B lib/bs/src/helpers
+####BSB GENERATED: NO EDIT}
diff --git a/node_modules/wonka/lib/bs/.bsbuild b/node_modules/wonka/lib/bs/.bsbuild
new file mode 100644
index 0000000..94a5804
--- /dev/null
+++ b/node_modules/wonka/lib/bs/.bsbuild
@@ -0,0 +1,22 @@
+18
+Rebel
+Wonka
+WonkaJs
+Array_js
+Rebel_js
+Wonka_sinks
+Wonka_types
+Array_native
+Rebel_native
+Wonka_callbag
+Wonka_helpers
+Wonka_sources
+MutableQueue_js
+MutableStack_js
+Wonka_operators
+Wonka_observable
+MutableQueue_native
+MutableStack_native
+src/include	src	src/web	src/include/rebel_js	src/include/rebel_native	src/helpers	
+1				
+0
diff --git a/node_modules/wonka/lib/bs/.bsdeps b/node_modules/wonka/lib/bs/.bsdeps
new file mode 100644
index 0000000..5834046
--- /dev/null
+++ b/node_modules/wonka/lib/bs/.bsdeps
@@ -0,0 +1,11 @@
+9.0.1
+/Volumes/SSD/Github/realtime-rescript-aws/node_modules/wonka
+1
+bsconfig.json	0x1.80ea54fcp+30
+src	0x1.80ea55f8p+30
+src/include	0x1.80ea55f8p+30
+src/include/rebel_js	0x1.80ea55f8p+30
+src/include/rebel_native	0x1.80ea55f8p+30
+src/web	0x1.80ea55f8p+30
+src/helpers	0x1.80ea55f8p+30
+src/shims	0x1.80ea556cp+30
diff --git a/node_modules/wonka/lib/bs/.compiler.log b/node_modules/wonka/lib/bs/.compiler.log
new file mode 100644
index 0000000..6af546c
--- /dev/null
+++ b/node_modules/wonka/lib/bs/.compiler.log
@@ -0,0 +1,2 @@
+#Start(1614452094053)
+#Done(1614452094938)
diff --git a/node_modules/wonka/lib/bs/.ninja_log b/node_modules/wonka/lib/bs/.ninja_log
new file mode 100644
index 0000000..f3f01c9
--- /dev/null
+++ b/node_modules/wonka/lib/bs/.ninja_log
@@ -0,0 +1,85 @@
+# ninja log v6
+1	41	1614452094000000000	src/Wonka.ast	8f7a0b21e820ce8c
+9	42	1614452094000000000	src/include/Rebel.ast	dcbd1663313a735c
+42	66	1614452094000000000	src/include/Rebel.d	3fdf06638583ea1a
+41	71	1614452094000000000	src/Wonka.d	4eb923ee2eda3f85
+3	76	1614452094000000000	src/Wonka_types.ast	bce16e4a167dab1
+2	82	1614452094000000000	src/Wonka_sinks.ast	33822028c4415786
+77	104	1614452094000000000	src/Wonka_types.d	c65079909d231e60
+82	126	1614452094000000000	src/Wonka_sinks.d	c27be053c95c7231
+71	131	1614452094000000000	src/include/rebel_js/Rebel_js.ast	e32cb6b26d88eec8
+68	135	1614452094000000000	src/include/rebel_js/Array_js.ast	dd35647875cba805
+4	138	1614452094000000000	src/Wonka_sources.ast	f544990c8684475
+131	152	1614452094000000000	src/include/rebel_js/Rebel_js.d	d3e0866424554ac5
+135	156	1614452094000000000	src/include/rebel_js/Array_js.d	200dae8dd6a9b68d
+138	161	1614452094000000000	src/Wonka_sources.d	672af4ec335a241f
+127	205	1614452094000000000	src/include/rebel_js/MutableQueue_js.ast	f2700d63f78ea158
+6	207	1614452094000000000	src/Wonka_operators.ast	5459da14627d1d8b
+206	227	1614452094000000000	src/include/rebel_js/MutableQueue_js.d	aaa13cb48cf82682
+152	229	1614452094000000000	src/include/rebel_js/MutableStack_js.ast	45da401d419eab4c
+208	231	1614452094000000000	src/Wonka_operators.d	3bb1cfd659283a2e
+163	234	1614452094000000000	src/include/rebel_native/Array_native.ast	7b018abfe77cf0ef
+230	248	1614452094000000000	src/include/rebel_js/MutableStack_js.d	3ad743c8f98e47a1
+156	252	1614452094000000000	src/include/rebel_js/Array_js.cmj	994e1d10362f54c5
+156	252	1614452094000000000	src/include/rebel_js/Array_js.cmi	994e1d10362f54c5
+156	252	1614452094000000000	../../src/include/rebel_js/Array_js.bs.js	994e1d10362f54c5
+234	259	1614452094000000000	src/include/rebel_native/Array_native.d	eb0bc01fc60999cf
+111	264	1614452094000000000	src/Wonka_types.cmj	857524955a16fbea
+111	264	1614452094000000000	src/Wonka_types.cmi	857524955a16fbea
+111	264	1614452094000000000	../../src/Wonka_types.bs.js	857524955a16fbea
+228	309	1614452094000000000	src/include/rebel_js/MutableQueue_js.cmj	5dae1fbee80996ec
+228	309	1614452094000000000	src/include/rebel_js/MutableQueue_js.cmi	5dae1fbee80996ec
+228	309	1614452094000000000	../../src/include/rebel_js/MutableQueue_js.bs.js	5dae1fbee80996ec
+232	311	1614452094000000000	src/include/rebel_native/Rebel_native.ast	c4d45f5f44b23c8f
+248	313	1614452094000000000	src/include/rebel_js/MutableStack_js.cmj	3f8070abb2611645
+248	313	1614452094000000000	src/include/rebel_js/MutableStack_js.cmi	3f8070abb2611645
+248	313	1614452094000000000	../../src/include/rebel_js/MutableStack_js.bs.js	3f8070abb2611645
+311	336	1614452094000000000	src/include/rebel_native/Rebel_native.d	20b1a209be29f4cb
+264	350	1614452094000000000	src/include/rebel_native/MutableStack_native.ast	9fadde621c45cac
+252	368	1614452094000000000	src/include/rebel_native/MutableQueue_native.ast	5723f92e1642a93b
+259	381	1614452094000000000	src/include/rebel_native/Array_native.cmj	ca6cb1960b70b8df
+259	381	1614452094000000000	src/include/rebel_native/Array_native.cmi	ca6cb1960b70b8df
+259	381	1614452094000000000	../../src/include/rebel_native/Array_native.bs.js	ca6cb1960b70b8df
+350	384	1614452094000000000	src/include/rebel_native/MutableStack_native.d	3e5c5f18c6201d4
+309	402	1614452094000000000	src/web/WonkaJs.ast	6fee05102cee5eaf
+314	414	1614452094000000000	src/include/rebel_js/Rebel_js.cmj	ec0a5afbbc71919b
+314	414	1614452094000000000	src/include/rebel_js/Rebel_js.cmi	ec0a5afbbc71919b
+314	414	1614452094000000000	../../src/include/rebel_js/Rebel_js.bs.js	ec0a5afbbc71919b
+368	426	1614452094000000000	src/include/rebel_native/MutableQueue_native.d	773ebe98506b2b14
+336	429	1614452094000000000	src/web/Wonka_callbag.ast	6925529b324f3e08
+402	450	1614452094000000000	src/web/WonkaJs.d	945a283301dfe3a9
+429	454	1614452094000000000	src/web/Wonka_callbag.d	87814b9b29480242
+381	462	1614452094000000000	src/web/Wonka_observable.ast	23c88cc07d4ce34
+462	485	1614452094000000000	src/web/Wonka_observable.d	beead209a66a73d1
+385	491	1614452094000000000	src/include/rebel_native/MutableStack_native.cmj	b16cf67786428412
+385	491	1614452094000000000	src/include/rebel_native/MutableStack_native.cmi	b16cf67786428412
+385	491	1614452094000000000	../../src/include/rebel_native/MutableStack_native.bs.js	b16cf67786428412
+416	492	1614452094000000000	src/include/Rebel.cmj	a4265ca627322ae1
+416	492	1614452094000000000	src/include/Rebel.cmi	a4265ca627322ae1
+416	492	1614452094000000000	../../src/include/Rebel.bs.js	a4265ca627322ae1
+426	515	1614452094000000000	src/include/rebel_native/MutableQueue_native.cmj	2e123dbdfc86500e
+426	515	1614452094000000000	src/include/rebel_native/MutableQueue_native.cmi	2e123dbdfc86500e
+426	515	1614452094000000000	../../src/include/rebel_native/MutableQueue_native.bs.js	2e123dbdfc86500e
+450	518	1614452094000000000	src/helpers/Wonka_helpers.ast	705ac191d3da2751
+454	528	1614452094000000000	src/web/Wonka_callbag.cmj	3b7123bebe48cd72
+454	528	1614452094000000000	src/web/Wonka_callbag.cmi	3b7123bebe48cd72
+454	528	1614452094000000000	../../src/web/Wonka_callbag.bs.js	3b7123bebe48cd72
+518	542	1614452094000000000	src/helpers/Wonka_helpers.d	1a639a9d60e56f72
+515	578	1614452094000000000	src/include/rebel_native/Rebel_native.cmj	6883be8dc0244a25
+515	578	1614452094000000000	src/include/rebel_native/Rebel_native.cmi	6883be8dc0244a25
+515	578	1614452094000000000	../../src/include/rebel_native/Rebel_native.bs.js	6883be8dc0244a25
+543	596	1614452094000000000	src/helpers/Wonka_helpers.cmj	775b53ecfc80e448
+543	596	1614452094000000000	src/helpers/Wonka_helpers.cmi	775b53ecfc80e448
+543	596	1614452094000000000	../../src/helpers/Wonka_helpers.bs.js	775b53ecfc80e448
+597	663	1614452094000000000	src/Wonka_sinks.cmj	d7211115c1677ea5
+597	663	1614452094000000000	src/Wonka_sinks.cmi	d7211115c1677ea5
+597	663	1614452094000000000	../../src/Wonka_sinks.bs.js	d7211115c1677ea5
+600	663	1614452094000000000	src/Wonka_sources.cmj	c7c9b372d6991096
+600	663	1614452094000000000	src/Wonka_sources.cmi	c7c9b372d6991096
+600	663	1614452094000000000	../../src/Wonka_sources.bs.js	c7c9b372d6991096
+601	667	1614452094000000000	src/web/Wonka_observable.cmj	7f86b6b48a8a2351
+601	667	1614452094000000000	src/web/Wonka_observable.cmi	7f86b6b48a8a2351
+601	667	1614452094000000000	../../src/web/Wonka_observable.bs.js	7f86b6b48a8a2351
+663	829	1614452094000000000	src/Wonka_operators.cmj	402430ccc7be322f
+663	829	1614452094000000000	src/Wonka_operators.cmi	402430ccc7be322f
+663	829	1614452094000000000	../../src/Wonka_operators.bs.js	402430ccc7be322f
diff --git a/node_modules/wonka/lib/bs/build.ninja b/node_modules/wonka/lib/bs/build.ninja
new file mode 100644
index 0000000..23ae2c7
--- /dev/null
+++ b/node_modules/wonka/lib/bs/build.ninja
@@ -0,0 +1,67 @@
+rescript = 1
+cleaner = /Volumes/SSD/Github/realtime-rescript-aws/node_modules/gentype/gentype.exe
+rule ast
+  command = /Volumes/SSD/Github/realtime-rescript-aws/node_modules/bs-platform/darwin/bsc.exe  -w a -bs-v 9.0.1 -bs-super-errors -bs-no-version-header -absname -bs-ast -o $out $i
+o src/Wonka.ast : ast ../../src/Wonka.ml
+rule deps
+  command = /Volumes/SSD/Github/realtime-rescript-aws/node_modules/bs-platform/darwin/bsb_helper.exe -hash 82c73799aa71762068c81b4979b30521 $in
+  restat = 1
+o src/Wonka.d : deps src/Wonka.ast
+rule mij
+  command = /Volumes/SSD/Github/realtime-rescript-aws/node_modules/bs-platform/darwin/bsc.exe -I src/shims -I src/helpers -I src/web -I src/include/rebel_native -I src/include/rebel_js -I src/include -I src -bs-super-errors -bs-no-version-header  -w a -bs-gentype /Volumes/SSD/Github/realtime-rescript-aws/node_modules/gentype/gentype.exe -bs-package-name wonka -bs-package-output es6:$in_d:.bs.js $i
+  dyndep = 1
+  restat = 1
+o src/Wonka.cmj src/Wonka.cmi ../../src/Wonka.bs.js : mij src/Wonka.ast
+rule astj
+  command = /Volumes/SSD/Github/realtime-rescript-aws/node_modules/bs-platform/darwin/bsc.exe  -w a -bs-v 9.0.1 -bs-super-errors -bs-no-version-header -absname -bs-ast -o $out $i
+o src/Wonka_sinks.ast : astj ../../src/Wonka_sinks.re
+o src/Wonka_sinks.d : deps src/Wonka_sinks.ast
+o src/Wonka_sinks.cmj src/Wonka_sinks.cmi ../../src/Wonka_sinks.bs.js : mij src/Wonka_sinks.ast
+o src/Wonka_types.ast : astj ../../src/Wonka_types.re
+o src/Wonka_types.d : deps src/Wonka_types.ast
+o src/Wonka_types.cmj src/Wonka_types.cmi ../../src/Wonka_types.bs.js : mij src/Wonka_types.ast
+o src/Wonka_sources.ast : astj ../../src/Wonka_sources.re
+o src/Wonka_sources.d : deps src/Wonka_sources.ast
+o src/Wonka_sources.cmj src/Wonka_sources.cmi ../../src/Wonka_sources.bs.js : mij src/Wonka_sources.ast
+o src/Wonka_operators.ast : astj ../../src/Wonka_operators.re
+o src/Wonka_operators.d : deps src/Wonka_operators.ast
+o src/Wonka_operators.cmj src/Wonka_operators.cmi ../../src/Wonka_operators.bs.js : mij src/Wonka_operators.ast
+o src/include/Rebel.ast : ast ../../src/include/Rebel.ml
+o src/include/Rebel.d : deps src/include/Rebel.ast
+o src/include/Rebel.cmj src/include/Rebel.cmi ../../src/include/Rebel.bs.js : mij src/include/Rebel.ast
+o src/include/rebel_js/Array_js.ast : astj ../../src/include/rebel_js/Array_js.re
+o src/include/rebel_js/Array_js.d : deps src/include/rebel_js/Array_js.ast
+o src/include/rebel_js/Array_js.cmj src/include/rebel_js/Array_js.cmi ../../src/include/rebel_js/Array_js.bs.js : mij src/include/rebel_js/Array_js.ast
+o src/include/rebel_js/Rebel_js.ast : astj ../../src/include/rebel_js/Rebel_js.re
+o src/include/rebel_js/Rebel_js.d : deps src/include/rebel_js/Rebel_js.ast
+o src/include/rebel_js/Rebel_js.cmj src/include/rebel_js/Rebel_js.cmi ../../src/include/rebel_js/Rebel_js.bs.js : mij src/include/rebel_js/Rebel_js.ast
+o src/include/rebel_js/MutableQueue_js.ast : astj ../../src/include/rebel_js/MutableQueue_js.re
+o src/include/rebel_js/MutableQueue_js.d : deps src/include/rebel_js/MutableQueue_js.ast
+o src/include/rebel_js/MutableQueue_js.cmj src/include/rebel_js/MutableQueue_js.cmi ../../src/include/rebel_js/MutableQueue_js.bs.js : mij src/include/rebel_js/MutableQueue_js.ast
+o src/include/rebel_js/MutableStack_js.ast : astj ../../src/include/rebel_js/MutableStack_js.re
+o src/include/rebel_js/MutableStack_js.d : deps src/include/rebel_js/MutableStack_js.ast
+o src/include/rebel_js/MutableStack_js.cmj src/include/rebel_js/MutableStack_js.cmi ../../src/include/rebel_js/MutableStack_js.bs.js : mij src/include/rebel_js/MutableStack_js.ast
+o src/include/rebel_native/Array_native.ast : astj ../../src/include/rebel_native/Array_native.re
+o src/include/rebel_native/Array_native.d : deps src/include/rebel_native/Array_native.ast
+o src/include/rebel_native/Array_native.cmj src/include/rebel_native/Array_native.cmi ../../src/include/rebel_native/Array_native.bs.js : mij src/include/rebel_native/Array_native.ast
+o src/include/rebel_native/Rebel_native.ast : astj ../../src/include/rebel_native/Rebel_native.re
+o src/include/rebel_native/Rebel_native.d : deps src/include/rebel_native/Rebel_native.ast
+o src/include/rebel_native/Rebel_native.cmj src/include/rebel_native/Rebel_native.cmi ../../src/include/rebel_native/Rebel_native.bs.js : mij src/include/rebel_native/Rebel_native.ast
+o src/include/rebel_native/MutableQueue_native.ast : astj ../../src/include/rebel_native/MutableQueue_native.re
+o src/include/rebel_native/MutableQueue_native.d : deps src/include/rebel_native/MutableQueue_native.ast
+o src/include/rebel_native/MutableQueue_native.cmj src/include/rebel_native/MutableQueue_native.cmi ../../src/include/rebel_native/MutableQueue_native.bs.js : mij src/include/rebel_native/MutableQueue_native.ast
+o src/include/rebel_native/MutableStack_native.ast : astj ../../src/include/rebel_native/MutableStack_native.re
+o src/include/rebel_native/MutableStack_native.d : deps src/include/rebel_native/MutableStack_native.ast
+o src/include/rebel_native/MutableStack_native.cmj src/include/rebel_native/MutableStack_native.cmi ../../src/include/rebel_native/MutableStack_native.bs.js : mij src/include/rebel_native/MutableStack_native.ast
+o src/web/WonkaJs.ast : astj ../../src/web/WonkaJs.re
+o src/web/WonkaJs.d : deps src/web/WonkaJs.ast
+o src/web/WonkaJs.cmj src/web/WonkaJs.cmi ../../src/web/WonkaJs.bs.js : mij src/web/WonkaJs.ast
+o src/web/Wonka_callbag.ast : astj ../../src/web/Wonka_callbag.re
+o src/web/Wonka_callbag.d : deps src/web/Wonka_callbag.ast
+o src/web/Wonka_callbag.cmj src/web/Wonka_callbag.cmi ../../src/web/Wonka_callbag.bs.js : mij src/web/Wonka_callbag.ast
+o src/web/Wonka_observable.ast : astj ../../src/web/Wonka_observable.re
+o src/web/Wonka_observable.d : deps src/web/Wonka_observable.ast
+o src/web/Wonka_observable.cmj src/web/Wonka_observable.cmi ../../src/web/Wonka_observable.bs.js : mij src/web/Wonka_observable.ast
+o src/helpers/Wonka_helpers.ast : astj ../../src/helpers/Wonka_helpers.re
+o src/helpers/Wonka_helpers.d : deps src/helpers/Wonka_helpers.ast
+o src/helpers/Wonka_helpers.cmj src/helpers/Wonka_helpers.cmi ../../src/helpers/Wonka_helpers.bs.js : mij src/helpers/Wonka_helpers.ast
diff --git a/node_modules/wonka/lib/bs/install.ninja b/node_modules/wonka/lib/bs/install.ninja
new file mode 100644
index 0000000..6f4d12f
--- /dev/null
+++ b/node_modules/wonka/lib/bs/install.ninja
@@ -0,0 +1,78 @@
+rescript = 1
+rule cp
+  command = cp $i $out
+rule touch
+ command = touch $out
+o Wonka.cmi : cp ../bs/src/Wonka.cmi
+o Wonka.cmj : cp ../bs/src/Wonka.cmj
+o Wonka.cmt : cp ../bs/src/Wonka.cmt
+o Wonka.ml : cp ../../src/Wonka.ml
+o Wonka_sinks.cmi : cp ../bs/src/Wonka_sinks.cmi
+o Wonka_sinks.cmj : cp ../bs/src/Wonka_sinks.cmj
+o Wonka_sinks.cmt : cp ../bs/src/Wonka_sinks.cmt
+o Wonka_sinks.re : cp ../../src/Wonka_sinks.re
+o Wonka_types.cmi : cp ../bs/src/Wonka_types.cmi
+o Wonka_types.cmj : cp ../bs/src/Wonka_types.cmj
+o Wonka_types.cmt : cp ../bs/src/Wonka_types.cmt
+o Wonka_types.re : cp ../../src/Wonka_types.re
+o Wonka_sources.cmi : cp ../bs/src/Wonka_sources.cmi
+o Wonka_sources.cmj : cp ../bs/src/Wonka_sources.cmj
+o Wonka_sources.cmt : cp ../bs/src/Wonka_sources.cmt
+o Wonka_sources.re : cp ../../src/Wonka_sources.re
+o Wonka_operators.cmi : cp ../bs/src/Wonka_operators.cmi
+o Wonka_operators.cmj : cp ../bs/src/Wonka_operators.cmj
+o Wonka_operators.cmt : cp ../bs/src/Wonka_operators.cmt
+o Wonka_operators.re : cp ../../src/Wonka_operators.re
+o Rebel.cmi : cp ../bs/src/include/Rebel.cmi
+o Rebel.cmj : cp ../bs/src/include/Rebel.cmj
+o Rebel.cmt : cp ../bs/src/include/Rebel.cmt
+o Rebel.ml : cp ../../src/include/Rebel.ml
+o Array_js.cmi : cp ../bs/src/include/rebel_js/Array_js.cmi
+o Array_js.cmj : cp ../bs/src/include/rebel_js/Array_js.cmj
+o Array_js.cmt : cp ../bs/src/include/rebel_js/Array_js.cmt
+o Array_js.re : cp ../../src/include/rebel_js/Array_js.re
+o Rebel_js.cmi : cp ../bs/src/include/rebel_js/Rebel_js.cmi
+o Rebel_js.cmj : cp ../bs/src/include/rebel_js/Rebel_js.cmj
+o Rebel_js.cmt : cp ../bs/src/include/rebel_js/Rebel_js.cmt
+o Rebel_js.re : cp ../../src/include/rebel_js/Rebel_js.re
+o MutableQueue_js.cmi : cp ../bs/src/include/rebel_js/MutableQueue_js.cmi
+o MutableQueue_js.cmj : cp ../bs/src/include/rebel_js/MutableQueue_js.cmj
+o MutableQueue_js.cmt : cp ../bs/src/include/rebel_js/MutableQueue_js.cmt
+o MutableQueue_js.re : cp ../../src/include/rebel_js/MutableQueue_js.re
+o MutableStack_js.cmi : cp ../bs/src/include/rebel_js/MutableStack_js.cmi
+o MutableStack_js.cmj : cp ../bs/src/include/rebel_js/MutableStack_js.cmj
+o MutableStack_js.cmt : cp ../bs/src/include/rebel_js/MutableStack_js.cmt
+o MutableStack_js.re : cp ../../src/include/rebel_js/MutableStack_js.re
+o Array_native.cmi : cp ../bs/src/include/rebel_native/Array_native.cmi
+o Array_native.cmj : cp ../bs/src/include/rebel_native/Array_native.cmj
+o Array_native.cmt : cp ../bs/src/include/rebel_native/Array_native.cmt
+o Array_native.re : cp ../../src/include/rebel_native/Array_native.re
+o Rebel_native.cmi : cp ../bs/src/include/rebel_native/Rebel_native.cmi
+o Rebel_native.cmj : cp ../bs/src/include/rebel_native/Rebel_native.cmj
+o Rebel_native.cmt : cp ../bs/src/include/rebel_native/Rebel_native.cmt
+o Rebel_native.re : cp ../../src/include/rebel_native/Rebel_native.re
+o MutableQueue_native.cmi : cp ../bs/src/include/rebel_native/MutableQueue_native.cmi
+o MutableQueue_native.cmj : cp ../bs/src/include/rebel_native/MutableQueue_native.cmj
+o MutableQueue_native.cmt : cp ../bs/src/include/rebel_native/MutableQueue_native.cmt
+o MutableQueue_native.re : cp ../../src/include/rebel_native/MutableQueue_native.re
+o MutableStack_native.cmi : cp ../bs/src/include/rebel_native/MutableStack_native.cmi
+o MutableStack_native.cmj : cp ../bs/src/include/rebel_native/MutableStack_native.cmj
+o MutableStack_native.cmt : cp ../bs/src/include/rebel_native/MutableStack_native.cmt
+o MutableStack_native.re : cp ../../src/include/rebel_native/MutableStack_native.re
+o WonkaJs.cmi : cp ../bs/src/web/WonkaJs.cmi
+o WonkaJs.cmj : cp ../bs/src/web/WonkaJs.cmj
+o WonkaJs.cmt : cp ../bs/src/web/WonkaJs.cmt
+o WonkaJs.re : cp ../../src/web/WonkaJs.re
+o Wonka_callbag.cmi : cp ../bs/src/web/Wonka_callbag.cmi
+o Wonka_callbag.cmj : cp ../bs/src/web/Wonka_callbag.cmj
+o Wonka_callbag.cmt : cp ../bs/src/web/Wonka_callbag.cmt
+o Wonka_callbag.re : cp ../../src/web/Wonka_callbag.re
+o Wonka_observable.cmi : cp ../bs/src/web/Wonka_observable.cmi
+o Wonka_observable.cmj : cp ../bs/src/web/Wonka_observable.cmj
+o Wonka_observable.cmt : cp ../bs/src/web/Wonka_observable.cmt
+o Wonka_observable.re : cp ../../src/web/Wonka_observable.re
+o Wonka_helpers.cmi : cp ../bs/src/helpers/Wonka_helpers.cmi
+o Wonka_helpers.cmj : cp ../bs/src/helpers/Wonka_helpers.cmj
+o Wonka_helpers.cmt : cp ../bs/src/helpers/Wonka_helpers.cmt
+o Wonka_helpers.re : cp ../../src/helpers/Wonka_helpers.re
+build install.stamp : touch Wonka.cmi Wonka.cmj Wonka_sinks.cmi Wonka_sinks.cmj Wonka_types.cmi Wonka_types.cmj Wonka_sources.cmi Wonka_sources.cmj Wonka_operators.cmi Wonka_operators.cmj Rebel.cmi Rebel.cmj Array_js.cmi Array_js.cmj Rebel_js.cmi Rebel_js.cmj MutableQueue_js.cmi MutableQueue_js.cmj MutableStack_js.cmi MutableStack_js.cmj Array_native.cmi Array_native.cmj Rebel_native.cmi Rebel_native.cmj MutableQueue_native.cmi MutableQueue_native.cmj MutableStack_native.cmi MutableStack_native.cmj WonkaJs.cmi WonkaJs.cmj Wonka_callbag.cmi Wonka_callbag.cmj Wonka_observable.cmi Wonka_observable.cmj Wonka_helpers.cmi Wonka_helpers.cmj 
diff --git a/node_modules/wonka/lib/bs/src/Wonka.ast b/node_modules/wonka/lib/bs/src/Wonka.ast
new file mode 100644
index 0000000..4549071
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka.ast differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka.d b/node_modules/wonka/lib/bs/src/Wonka.d
new file mode 100644
index 0000000..11a7baa
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/Wonka.d
@@ -0,0 +1 @@
+src/Wonka.cmj : src/web/WonkaJs.cmj src/web/WonkaJs.cmi src/Wonka_operators.cmj src/Wonka_operators.cmi src/Wonka_sinks.cmj src/Wonka_sinks.cmi src/Wonka_sources.cmj src/Wonka_sources.cmi src/Wonka_types.cmj src/Wonka_types.cmi
diff --git a/node_modules/wonka/lib/bs/src/Wonka_operators.ast b/node_modules/wonka/lib/bs/src/Wonka_operators.ast
new file mode 100644
index 0000000..0c925d4
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_operators.ast differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_operators.cmi b/node_modules/wonka/lib/bs/src/Wonka_operators.cmi
new file mode 100644
index 0000000..d8ef5ca
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_operators.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_operators.cmj b/node_modules/wonka/lib/bs/src/Wonka_operators.cmj
new file mode 100644
index 0000000..fb47259
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_operators.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_operators.cmt b/node_modules/wonka/lib/bs/src/Wonka_operators.cmt
new file mode 100644
index 0000000..be62585
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_operators.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_operators.d b/node_modules/wonka/lib/bs/src/Wonka_operators.d
new file mode 100644
index 0000000..7d5cdfa
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/Wonka_operators.d
@@ -0,0 +1 @@
+src/Wonka_operators.cmj : src/include/Rebel.cmj src/include/Rebel.cmi src/helpers/Wonka_helpers.cmj src/helpers/Wonka_helpers.cmi src/Wonka_sources.cmj src/Wonka_sources.cmi src/Wonka_types.cmj src/Wonka_types.cmi
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sinks.ast b/node_modules/wonka/lib/bs/src/Wonka_sinks.ast
new file mode 100644
index 0000000..c0e7165
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_sinks.ast differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sinks.cmi b/node_modules/wonka/lib/bs/src/Wonka_sinks.cmi
new file mode 100644
index 0000000..1f3d5a3
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_sinks.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sinks.cmj b/node_modules/wonka/lib/bs/src/Wonka_sinks.cmj
new file mode 100644
index 0000000..6a0156f
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_sinks.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sinks.cmt b/node_modules/wonka/lib/bs/src/Wonka_sinks.cmt
new file mode 100644
index 0000000..1becc12
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_sinks.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sinks.d b/node_modules/wonka/lib/bs/src/Wonka_sinks.d
new file mode 100644
index 0000000..19ac157
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/Wonka_sinks.d
@@ -0,0 +1 @@
+src/Wonka_sinks.cmj : src/include/Rebel.cmj src/include/Rebel.cmi src/helpers/Wonka_helpers.cmj src/helpers/Wonka_helpers.cmi src/Wonka_types.cmj src/Wonka_types.cmi
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sources.ast b/node_modules/wonka/lib/bs/src/Wonka_sources.ast
new file mode 100644
index 0000000..8481d75
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_sources.ast differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sources.cmi b/node_modules/wonka/lib/bs/src/Wonka_sources.cmi
new file mode 100644
index 0000000..2ee6aff
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_sources.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sources.cmj b/node_modules/wonka/lib/bs/src/Wonka_sources.cmj
new file mode 100644
index 0000000..4708d20
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_sources.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sources.cmt b/node_modules/wonka/lib/bs/src/Wonka_sources.cmt
new file mode 100644
index 0000000..f3ccead
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_sources.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_sources.d b/node_modules/wonka/lib/bs/src/Wonka_sources.d
new file mode 100644
index 0000000..437aa79
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/Wonka_sources.d
@@ -0,0 +1 @@
+src/Wonka_sources.cmj : src/include/Rebel.cmj src/include/Rebel.cmi src/helpers/Wonka_helpers.cmj src/helpers/Wonka_helpers.cmi src/Wonka_types.cmj src/Wonka_types.cmi
diff --git a/node_modules/wonka/lib/bs/src/Wonka_types.ast b/node_modules/wonka/lib/bs/src/Wonka_types.ast
new file mode 100644
index 0000000..bb22d1a
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_types.ast differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_types.cmi b/node_modules/wonka/lib/bs/src/Wonka_types.cmi
new file mode 100644
index 0000000..89f5bec
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_types.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_types.cmj b/node_modules/wonka/lib/bs/src/Wonka_types.cmj
new file mode 100644
index 0000000..59714e4
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_types.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_types.cmt b/node_modules/wonka/lib/bs/src/Wonka_types.cmt
new file mode 100644
index 0000000..c527fe3
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/Wonka_types.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/Wonka_types.d b/node_modules/wonka/lib/bs/src/Wonka_types.d
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.ast b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.ast
new file mode 100644
index 0000000..e7880b3
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.ast differ
diff --git a/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmi b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmi
new file mode 100644
index 0000000..40394e2
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmj b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmj
new file mode 100644
index 0000000..f4566f7
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmt b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmt
new file mode 100644
index 0000000..ceda06c
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.d b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.d
new file mode 100644
index 0000000..7087962
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/helpers/Wonka_helpers.d
@@ -0,0 +1 @@
+src/helpers/Wonka_helpers.cmj : src/Wonka_types.cmj src/Wonka_types.cmi
diff --git a/node_modules/wonka/lib/bs/src/include/Rebel.ast b/node_modules/wonka/lib/bs/src/include/Rebel.ast
new file mode 100644
index 0000000..7c65328
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/Rebel.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/Rebel.cmi b/node_modules/wonka/lib/bs/src/include/Rebel.cmi
new file mode 100644
index 0000000..7a14d26
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/Rebel.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/Rebel.cmj b/node_modules/wonka/lib/bs/src/include/Rebel.cmj
new file mode 100644
index 0000000..95745aa
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/Rebel.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/Rebel.cmt b/node_modules/wonka/lib/bs/src/include/Rebel.cmt
new file mode 100644
index 0000000..b155481
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/Rebel.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/Rebel.d b/node_modules/wonka/lib/bs/src/include/Rebel.d
new file mode 100644
index 0000000..a13674a
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/include/Rebel.d
@@ -0,0 +1 @@
+src/include/Rebel.cmj : src/include/rebel_js/Rebel_js.cmj src/include/rebel_js/Rebel_js.cmi
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.ast b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.ast
new file mode 100644
index 0000000..abb1d1a
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmi b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmi
new file mode 100644
index 0000000..8f7baca
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmj b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmj
new file mode 100644
index 0000000..becb674
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmt b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmt
new file mode 100644
index 0000000..6d4a517
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.d b/node_modules/wonka/lib/bs/src/include/rebel_js/Array_js.d
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.ast b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.ast
new file mode 100644
index 0000000..88514cb
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmi b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmi
new file mode 100644
index 0000000..eccaab6
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmj b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmj
new file mode 100644
index 0000000..7fffb42
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmt b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmt
new file mode 100644
index 0000000..c2dd615
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.d b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableQueue_js.d
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.ast b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.ast
new file mode 100644
index 0000000..3870ad1
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmi b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmi
new file mode 100644
index 0000000..a6ed6e8
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmj b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmj
new file mode 100644
index 0000000..710c5ae
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmt b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmt
new file mode 100644
index 0000000..890616e
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.d b/node_modules/wonka/lib/bs/src/include/rebel_js/MutableStack_js.d
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.ast b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.ast
new file mode 100644
index 0000000..69f4a59
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmi b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmi
new file mode 100644
index 0000000..ec8c008
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmj b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmj
new file mode 100644
index 0000000..ff55e1b
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmt b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmt
new file mode 100644
index 0000000..c3e3d71
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.d b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.d
new file mode 100644
index 0000000..b6855a5
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/include/rebel_js/Rebel_js.d
@@ -0,0 +1 @@
+src/include/rebel_js/Rebel_js.cmj : src/include/rebel_js/Array_js.cmj src/include/rebel_js/Array_js.cmi src/include/rebel_js/MutableQueue_js.cmj src/include/rebel_js/MutableQueue_js.cmi src/include/rebel_js/MutableStack_js.cmj src/include/rebel_js/MutableStack_js.cmi
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.ast b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.ast
new file mode 100644
index 0000000..c52f285
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmi b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmi
new file mode 100644
index 0000000..eaa1fb6
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmj b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmj
new file mode 100644
index 0000000..ac9aa76
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmt b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmt
new file mode 100644
index 0000000..f1343eb
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.d b/node_modules/wonka/lib/bs/src/include/rebel_native/Array_native.d
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.ast b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.ast
new file mode 100644
index 0000000..6d3c5fb
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmi b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmi
new file mode 100644
index 0000000..eca3657
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmj b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmj
new file mode 100644
index 0000000..da71996
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmt b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmt
new file mode 100644
index 0000000..01c2323
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.d b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableQueue_native.d
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.ast b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.ast
new file mode 100644
index 0000000..3bec50c
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmi b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmi
new file mode 100644
index 0000000..5b12b89
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmj b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmj
new file mode 100644
index 0000000..08375e0
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmt b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmt
new file mode 100644
index 0000000..7600417
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.d b/node_modules/wonka/lib/bs/src/include/rebel_native/MutableStack_native.d
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.ast b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.ast
new file mode 100644
index 0000000..27c4e1b
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.ast differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmi b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmi
new file mode 100644
index 0000000..f475613
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmj b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmj
new file mode 100644
index 0000000..3b51809
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmt b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmt
new file mode 100644
index 0000000..7ee2173
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.d b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.d
new file mode 100644
index 0000000..5795486
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/include/rebel_native/Rebel_native.d
@@ -0,0 +1 @@
+src/include/rebel_native/Rebel_native.cmj : src/include/rebel_native/Array_native.cmj src/include/rebel_native/Array_native.cmi src/include/rebel_native/MutableQueue_native.cmj src/include/rebel_native/MutableQueue_native.cmi src/include/rebel_native/MutableStack_native.cmj src/include/rebel_native/MutableStack_native.cmi
diff --git a/node_modules/wonka/lib/bs/src/web/WonkaJs.ast b/node_modules/wonka/lib/bs/src/web/WonkaJs.ast
new file mode 100644
index 0000000..0461e05
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/WonkaJs.ast differ
diff --git a/node_modules/wonka/lib/bs/src/web/WonkaJs.cmt b/node_modules/wonka/lib/bs/src/web/WonkaJs.cmt
new file mode 100644
index 0000000..3f3b10b
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/WonkaJs.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/web/WonkaJs.d b/node_modules/wonka/lib/bs/src/web/WonkaJs.d
new file mode 100644
index 0000000..331c1de
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/web/WonkaJs.d
@@ -0,0 +1 @@
+src/web/WonkaJs.cmj : src/web/Wonka_callbag.cmj src/web/Wonka_callbag.cmi src/web/Wonka_observable.cmj src/web/Wonka_observable.cmi src/Wonka_operators.cmj src/Wonka_operators.cmi src/Wonka_types.cmj src/Wonka_types.cmi
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_callbag.ast b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.ast
new file mode 100644
index 0000000..43afde2
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.ast differ
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmi b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmi
new file mode 100644
index 0000000..517df27
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmj b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmj
new file mode 100644
index 0000000..e9b9c61
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmt b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmt
new file mode 100644
index 0000000..a15662e
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_callbag.d b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.d
new file mode 100644
index 0000000..3099246
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/web/Wonka_callbag.d
@@ -0,0 +1 @@
+src/web/Wonka_callbag.cmj : src/Wonka_types.cmj src/Wonka_types.cmi
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_observable.ast b/node_modules/wonka/lib/bs/src/web/Wonka_observable.ast
new file mode 100644
index 0000000..b509f3f
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/Wonka_observable.ast differ
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmi b/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmi
new file mode 100644
index 0000000..842a523
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmi differ
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmj b/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmj
new file mode 100644
index 0000000..be76098
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmj differ
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmt b/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmt
new file mode 100644
index 0000000..8f51879
Binary files /dev/null and b/node_modules/wonka/lib/bs/src/web/Wonka_observable.cmt differ
diff --git a/node_modules/wonka/lib/bs/src/web/Wonka_observable.d b/node_modules/wonka/lib/bs/src/web/Wonka_observable.d
new file mode 100644
index 0000000..cf7e18f
--- /dev/null
+++ b/node_modules/wonka/lib/bs/src/web/Wonka_observable.d
@@ -0,0 +1 @@
+src/web/Wonka_observable.cmj : src/helpers/Wonka_helpers.cmj src/helpers/Wonka_helpers.cmi src/Wonka_types.cmj src/Wonka_types.cmi
diff --git a/node_modules/wonka/src/Wonka.bs.js b/node_modules/wonka/src/Wonka.bs.js
deleted file mode 100644
index 6d44190..0000000
--- a/node_modules/wonka/src/Wonka.bs.js
+++ /dev/null
@@ -1,161 +0,0 @@
-
-
-import * as WonkaJs from "./web/WonkaJs.bs.js";
-import * as Wonka_sinks from "./Wonka_sinks.bs.js";
-import * as Wonka_sources from "./Wonka_sources.bs.js";
-import * as Wonka_operators from "./Wonka_operators.bs.js";
-
-var Types;
-
-var fromArray = Wonka_sources.fromArray;
-
-var fromList = Wonka_sources.fromList;
-
-var fromValue = Wonka_sources.fromValue;
-
-var make = Wonka_sources.make;
-
-var makeSubject = Wonka_sources.makeSubject;
-
-var empty = Wonka_sources.empty;
-
-var never = Wonka_sources.never;
-
-var buffer = Wonka_operators.buffer;
-
-var combine = Wonka_operators.combine;
-
-var concatMap = Wonka_operators.concatMap;
-
-var concatAll = Wonka_operators.concatAll;
-
-var concat = Wonka_operators.concat;
-
-var filter = Wonka_operators.filter;
-
-var map = Wonka_operators.map;
-
-var mergeMap = Wonka_operators.mergeMap;
-
-var merge = Wonka_operators.merge;
-
-var mergeAll = Wonka_operators.mergeAll;
-
-var flatten = Wonka_operators.flatten;
-
-var onEnd = Wonka_operators.onEnd;
-
-var onPush = Wonka_operators.onPush;
-
-var tap = Wonka_operators.tap;
-
-var onStart = Wonka_operators.onStart;
-
-var sample = Wonka_operators.sample;
-
-var scan = Wonka_operators.scan;
-
-var share = Wonka_operators.share;
-
-var skip = Wonka_operators.skip;
-
-var skipUntil = Wonka_operators.skipUntil;
-
-var skipWhile = Wonka_operators.skipWhile;
-
-var switchMap = Wonka_operators.switchMap;
-
-var switchAll = Wonka_operators.switchAll;
-
-var take = Wonka_operators.take;
-
-var takeLast = Wonka_operators.takeLast;
-
-var takeUntil = Wonka_operators.takeUntil;
-
-var takeWhile = Wonka_operators.takeWhile;
-
-var subscribe = Wonka_sinks.subscribe;
-
-var forEach = Wonka_sinks.forEach;
-
-var publish = Wonka_sinks.publish;
-
-var toArray = Wonka_sinks.toArray;
-
-var fromObservable = WonkaJs.fromObservable;
-
-var toObservable = WonkaJs.toObservable;
-
-var fromCallbag = WonkaJs.fromCallbag;
-
-var toCallbag = WonkaJs.toCallbag;
-
-var debounce = WonkaJs.debounce;
-
-var delay = WonkaJs.delay;
-
-var throttle = WonkaJs.throttle;
-
-var toPromise = WonkaJs.toPromise;
-
-var interval = WonkaJs.interval;
-
-var fromDomEvent = WonkaJs.fromDomEvent;
-
-var fromPromise = WonkaJs.fromPromise;
-
-export {
-  Types ,
-  fromArray ,
-  fromList ,
-  fromValue ,
-  make ,
-  makeSubject ,
-  empty ,
-  never ,
-  buffer ,
-  combine ,
-  concatMap ,
-  concatAll ,
-  concat ,
-  filter ,
-  map ,
-  mergeMap ,
-  merge ,
-  mergeAll ,
-  flatten ,
-  onEnd ,
-  onPush ,
-  tap ,
-  onStart ,
-  sample ,
-  scan ,
-  share ,
-  skip ,
-  skipUntil ,
-  skipWhile ,
-  switchMap ,
-  switchAll ,
-  take ,
-  takeLast ,
-  takeUntil ,
-  takeWhile ,
-  subscribe ,
-  forEach ,
-  publish ,
-  toArray ,
-  fromObservable ,
-  toObservable ,
-  fromCallbag ,
-  toCallbag ,
-  debounce ,
-  delay ,
-  throttle ,
-  toPromise ,
-  interval ,
-  fromDomEvent ,
-  fromPromise ,
-  
-}
-/* WonkaJs Not a pure module */
diff --git a/node_modules/wonka/src/Wonka_operators.bs.js b/node_modules/wonka/src/Wonka_operators.bs.js
index 4818a4c..4eb2fbf 100644
--- a/node_modules/wonka/src/Wonka_operators.bs.js
+++ b/node_modules/wonka/src/Wonka_operators.bs.js
@@ -30,19 +30,7 @@ function buffer(notifier) {
                   sink(/* End */0);
                 }
                 
-              } else if (signal.TAG) {
-                if (!state.ended) {
-                  state.buffer.push(signal._0);
-                  if (state.pulled) {
-                    state.pulled = false;
-                  } else {
-                    state.pulled = true;
-                    state.sourceTalkback(/* Pull */0);
-                    state.notifierTalkback(/* Pull */0);
-                  }
-                }
-                
-              } else {
+              } else if (signal.TAG === /* Start */0) {
                 state.sourceTalkback = signal._0;
                 Curry._1(notifier, (function (signal) {
                         if (typeof signal === "number") {
@@ -58,21 +46,27 @@ function buffer(notifier) {
                             sink(/* End */0);
                           }
                           
-                        } else if (signal.TAG) {
-                          if (!state.ended && state.buffer.length > 0) {
-                            var buffer = state.buffer;
-                            state.buffer = new Array();
-                            sink({
-                                  TAG: /* Push */1,
-                                  _0: buffer
-                                });
-                          }
-                          
-                        } else {
+                        } else if (signal.TAG === /* Start */0) {
                           state.notifierTalkback = signal._0;
+                        } else if (!state.ended && state.buffer.length > 0) {
+                          var buffer = state.buffer;
+                          state.buffer = new Array();
+                          sink({
+                                TAG: /* Push */1,
+                                _0: buffer
+                              });
                         }
                         
                       }));
+              } else if (!state.ended) {
+                state.buffer.push(signal._0);
+                if (state.pulled) {
+                  state.pulled = false;
+                } else {
+                  state.pulled = true;
+                  state.sourceTalkback(/* Pull */0);
+                  state.notifierTalkback(/* Pull */0);
+                }
               }
               
             }));
@@ -123,7 +117,7 @@ function combine(sourceA, sourceB) {
                 return ;
               }
             }
-            if (!signal.TAG) {
+            if (signal.TAG === /* Start */0) {
               state.talkbackA = signal._0;
               return ;
             }
@@ -165,7 +159,7 @@ function combine(sourceA, sourceB) {
                 return ;
               }
             }
-            if (!signal.TAG) {
+            if (signal.TAG === /* Start */0) {
               state.talkbackB = signal._0;
               return ;
             }
@@ -246,21 +240,18 @@ function concatMap(f) {
                     
                   }
                   
-                } else if (signal.TAG) {
-                  if (state.innerActive) {
-                    sink(signal);
-                    if (state.innerPulled) {
-                      state.innerPulled = false;
-                    } else {
-                      state.innerTalkback(/* Pull */0);
-                    }
-                  }
-                  
-                } else {
+                } else if (signal.TAG === /* Start */0) {
                   var tb = signal._0;
                   state.innerTalkback = tb;
                   state.innerPulled = false;
                   tb(/* Pull */0);
+                } else if (state.innerActive) {
+                  sink(signal);
+                  if (state.innerPulled) {
+                    state.innerPulled = false;
+                  } else {
+                    state.innerTalkback(/* Pull */0);
+                  }
                 }
                 
               }));
@@ -276,19 +267,16 @@ function concatMap(f) {
                   
                 }
                 
-              } else if (signal.TAG) {
-                if (!state.ended) {
-                  var x = signal._0;
-                  state.outerPulled = false;
-                  if (state.innerActive) {
-                    state.inputQueue.push(x);
-                  } else {
-                    applyInnerSource(f(x));
-                  }
-                }
-                
-              } else {
+              } else if (signal.TAG === /* Start */0) {
                 state.outerTalkback = signal._0;
+              } else if (!state.ended) {
+                var x = signal._0;
+                state.outerPulled = false;
+                if (state.innerActive) {
+                  state.inputQueue.push(x);
+                } else {
+                  applyInnerSource(f(x));
+                }
               }
               
             }));
@@ -345,15 +333,13 @@ function filter(f) {
       return Curry._1(source, (function (signal) {
                     if (typeof signal === "number") {
                       sink(signal);
-                    } else if (signal.TAG) {
-                      if (f(signal._0)) {
-                        sink(signal);
-                      } else {
-                        talkback.contents(/* Pull */0);
-                      }
-                    } else {
+                    } else if (signal.TAG === /* Start */0) {
                       talkback.contents = signal._0;
                       sink(signal);
+                    } else if (f(signal._0)) {
+                      sink(signal);
+                    } else {
+                      talkback.contents(/* Pull */0);
                     }
                     
                   }));
@@ -367,12 +353,12 @@ function map(f) {
       return Curry._1(source, (function (signal) {
                     var tmp;
                     tmp = typeof signal === "number" ? /* End */0 : (
-                        signal.TAG ? ({
-                              TAG: /* Push */1,
-                              _0: f(signal._0)
-                            }) : ({
+                        signal.TAG === /* Start */0 ? ({
                               TAG: /* Start */0,
                               _0: signal._0
+                            }) : ({
+                              TAG: /* Push */1,
+                              _0: f(signal._0)
                             })
                       );
                     return sink(tmp);
@@ -412,7 +398,7 @@ function mergeMap(f) {
                           return ;
                         }
                       }
-                      if (signal.TAG) {
+                      if (signal.TAG !== /* Start */0) {
                         if (state.innerTalkbacks.length !== 0) {
                           sink({
                                 TAG: /* Push */1,
@@ -441,21 +427,19 @@ function mergeMap(f) {
                 } else {
                   return ;
                 }
-              } else if (signal.TAG) {
-                if (!state.ended) {
-                  state.outerPulled = false;
-                  applyInnerSource(f(signal._0));
-                  if (!state.outerPulled) {
-                    state.outerPulled = true;
-                    return state.outerTalkback(/* Pull */0);
-                  } else {
-                    return ;
-                  }
+              } else if (signal.TAG === /* Start */0) {
+                state.outerTalkback = signal._0;
+                return ;
+              } else if (!state.ended) {
+                state.outerPulled = false;
+                applyInnerSource(f(signal._0));
+                if (!state.outerPulled) {
+                  state.outerPulled = true;
+                  return state.outerTalkback(/* Pull */0);
                 } else {
                   return ;
                 }
               } else {
-                state.outerTalkback = signal._0;
                 return ;
               }
             }));
@@ -517,7 +501,7 @@ function onEnd(f) {
                         return ;
                       }
                     }
-                    if (signal.TAG) {
+                    if (signal.TAG !== /* Start */0) {
                       if (!ended.contents) {
                         return sink(signal);
                       } else {
@@ -558,13 +542,7 @@ function onPush(f) {
                         sink(signal);
                       }
                       
-                    } else if (signal.TAG) {
-                      if (!ended.contents) {
-                        f(signal._0);
-                        sink(signal);
-                      }
-                      
-                    } else {
+                    } else if (signal.TAG === /* Start */0) {
                       var talkback = signal._0;
                       sink({
                             TAG: /* Start */0,
@@ -580,6 +558,9 @@ function onPush(f) {
                                 
                               })
                           });
+                    } else if (!ended.contents) {
+                      f(signal._0);
+                      sink(signal);
                     }
                     
                   }));
@@ -594,7 +575,7 @@ function onStart(f) {
                     if (typeof signal === "number") {
                       return sink(signal);
                     }
-                    if (signal.TAG) {
+                    if (signal.TAG !== /* Start */0) {
                       return sink(signal);
                     }
                     sink(signal);
@@ -624,7 +605,7 @@ function sample(notifier) {
                   return ;
                 }
               }
-              if (!signal.TAG) {
+              if (signal.TAG === /* Start */0) {
                 state.sourceTalkback = signal._0;
                 return ;
               }
@@ -648,19 +629,17 @@ function sample(notifier) {
                 } else {
                   return ;
                 }
-              } else if (signal.TAG) {
-                if (match !== undefined && !state.ended) {
-                  state.value = undefined;
-                  return sink({
-                              TAG: /* Push */1,
-                              _0: Caml_option.valFromOption(match)
-                            });
-                } else {
-                  return ;
-                }
-              } else {
+              } else if (signal.TAG === /* Start */0) {
                 state.notifierTalkback = signal._0;
                 return ;
+              } else if (match !== undefined && !state.ended) {
+                state.value = undefined;
+                return sink({
+                            TAG: /* Push */1,
+                            _0: Caml_option.valFromOption(match)
+                          });
+              } else {
+                return ;
               }
             }));
       return sink({
@@ -696,16 +675,16 @@ function scan(f, seed) {
                     var tmp;
                     if (typeof signal === "number") {
                       tmp = /* End */0;
-                    } else if (signal.TAG) {
-                      acc.contents = f(acc.contents, signal._0);
+                    } else if (signal.TAG === /* Start */0) {
                       tmp = {
-                        TAG: /* Push */1,
-                        _0: acc.contents
+                        TAG: /* Start */0,
+                        _0: signal._0
                       };
                     } else {
+                      acc.contents = f(acc.contents, signal._0);
                       tmp = {
-                        TAG: /* Start */0,
-                        _0: signal._0
+                        TAG: /* Push */1,
+                        _0: acc.contents
                       };
                     }
                     return sink(tmp);
@@ -731,7 +710,7 @@ function share(source) {
                 state.sinks = new Array();
                 return ;
               }
-              if (!signal.TAG) {
+              if (signal.TAG === /* Start */0) {
                 state.talkback = signal._0;
                 return ;
               }
@@ -776,7 +755,7 @@ function skip(wait) {
                     if (typeof signal === "number") {
                       return sink(signal);
                     }
-                    if (signal.TAG) {
+                    if (signal.TAG !== /* Start */0) {
                       if (state.rest > 0) {
                         state.rest = state.rest - 1 | 0;
                         return state.talkback(/* Pull */0);
@@ -808,18 +787,7 @@ function skipUntil(notifier) {
                 }
                 state.ended = true;
                 sink(/* End */0);
-              } else if (signal.TAG) {
-                if (!state.skip && !state.ended) {
-                  state.pulled = false;
-                  sink(signal);
-                } else if (state.pulled) {
-                  state.pulled = false;
-                } else {
-                  state.pulled = true;
-                  state.sourceTalkback(/* Pull */0);
-                  state.notifierTalkback(/* Pull */0);
-                }
-              } else {
+              } else if (signal.TAG === /* Start */0) {
                 state.sourceTalkback = signal._0;
                 Curry._1(notifier, (function (signal) {
                         if (typeof signal === "number") {
@@ -828,16 +796,25 @@ function skipUntil(notifier) {
                             state.sourceTalkback(/* Close */1);
                           }
                           
-                        } else if (signal.TAG) {
-                          state.skip = false;
-                          state.notifierTalkback(/* Close */1);
-                        } else {
+                        } else if (signal.TAG === /* Start */0) {
                           var innerTb = signal._0;
                           state.notifierTalkback = innerTb;
                           innerTb(/* Pull */0);
+                        } else {
+                          state.skip = false;
+                          state.notifierTalkback(/* Close */1);
                         }
                         
                       }));
+              } else if (!state.skip && !state.ended) {
+                state.pulled = false;
+                sink(signal);
+              } else if (state.pulled) {
+                state.pulled = false;
+              } else {
+                state.pulled = true;
+                state.sourceTalkback(/* Pull */0);
+                state.notifierTalkback(/* Pull */0);
               }
               
             }));
@@ -881,7 +858,7 @@ function skipWhile(f) {
                     if (typeof signal === "number") {
                       return sink(signal);
                     }
-                    if (signal.TAG) {
+                    if (signal.TAG !== /* Start */0) {
                       if (state.skip) {
                         if (f(signal._0)) {
                           return state.talkback(/* Pull */0);
@@ -928,19 +905,19 @@ function switchMap(f) {
                     return ;
                   }
                 }
-                if (signal.TAG) {
-                  sink(signal);
-                  if (state.innerPulled) {
-                    state.innerPulled = false;
-                    return ;
-                  } else {
-                    return state.innerTalkback(/* Pull */0);
-                  }
+                if (signal.TAG === /* Start */0) {
+                  var tb = signal._0;
+                  state.innerTalkback = tb;
+                  state.innerPulled = false;
+                  return tb(/* Pull */0);
+                }
+                sink(signal);
+                if (state.innerPulled) {
+                  state.innerPulled = false;
+                  return ;
+                } else {
+                  return state.innerTalkback(/* Pull */0);
                 }
-                var tb = signal._0;
-                state.innerTalkback = tb;
-                state.innerPulled = false;
-                return tb(/* Pull */0);
               }));
         
       };
@@ -954,23 +931,20 @@ function switchMap(f) {
                   
                 }
                 
-              } else if (signal.TAG) {
-                if (!state.ended) {
-                  if (state.innerActive) {
-                    state.innerTalkback(/* Close */1);
-                    state.innerTalkback = Wonka_helpers.talkbackPlaceholder;
-                  }
-                  if (state.outerPulled) {
-                    state.outerPulled = false;
-                  } else {
-                    state.outerPulled = true;
-                    state.outerTalkback(/* Pull */0);
-                  }
-                  applyInnerSource(f(signal._0));
-                }
-                
-              } else {
+              } else if (signal.TAG === /* Start */0) {
                 state.outerTalkback = signal._0;
+              } else if (!state.ended) {
+                if (state.innerActive) {
+                  state.innerTalkback(/* Close */1);
+                  state.innerTalkback = Wonka_helpers.talkbackPlaceholder;
+                }
+                if (state.outerPulled) {
+                  state.outerPulled = false;
+                } else {
+                  state.outerPulled = true;
+                  state.outerTalkback(/* Pull */0);
+                }
+                applyInnerSource(f(signal._0));
               }
               
             }));
@@ -1029,7 +1003,7 @@ function take(max) {
                   return ;
                 }
               }
-              if (signal.TAG) {
+              if (signal.TAG !== /* Start */0) {
                 if (state.taken < max && !state.ended) {
                   state.taken = state.taken + 1 | 0;
                   sink(signal);
@@ -1084,14 +1058,7 @@ function takeLast(max) {
       return Curry._1(source, (function (signal) {
                     if (typeof signal === "number") {
                       Wonka_sources.fromArray(state.queue)(sink);
-                    } else if (signal.TAG) {
-                      var size = state.queue.length;
-                      if (size >= max && max > 0) {
-                        state.queue.shift();
-                      }
-                      state.queue.push(signal._0);
-                      state.talkback(/* Pull */0);
-                    } else {
+                    } else if (signal.TAG === /* Start */0) {
                       var talkback = signal._0;
                       if (max <= 0) {
                         talkback(/* Close */1);
@@ -1100,6 +1067,13 @@ function takeLast(max) {
                         state.talkback = talkback;
                         talkback(/* Pull */0);
                       }
+                    } else {
+                      var size = state.queue.length;
+                      if (size >= max && max > 0) {
+                        state.queue.shift();
+                      }
+                      state.queue.push(signal._0);
+                      state.talkback(/* Pull */0);
                     }
                     
                   }));
@@ -1123,27 +1097,24 @@ function takeUntil(notifier) {
                   sink(/* End */0);
                 }
                 
-              } else if (signal.TAG) {
-                if (!state.ended) {
-                  sink(signal);
-                }
-                
-              } else {
+              } else if (signal.TAG === /* Start */0) {
                 state.sourceTalkback = signal._0;
                 Curry._1(notifier, (function (signal) {
                         if (typeof signal !== "number") {
-                          if (signal.TAG) {
-                            state.ended = true;
-                            state.sourceTalkback(/* Close */1);
-                            sink(/* End */0);
-                          } else {
+                          if (signal.TAG === /* Start */0) {
                             var innerTb = signal._0;
                             state.notifierTalkback = innerTb;
                             innerTb(/* Pull */0);
+                          } else {
+                            state.ended = true;
+                            state.sourceTalkback(/* Close */1);
+                            sink(/* End */0);
                           }
                         }
                         
                       }));
+              } else if (!state.ended) {
+                sink(signal);
               }
               
             }));
@@ -1182,7 +1153,7 @@ function takeWhile(f) {
                         return ;
                       }
                     }
-                    if (signal.TAG) {
+                    if (signal.TAG !== /* Start */0) {
                       if (!state.ended) {
                         if (f(signal._0)) {
                           return sink(signal);
diff --git a/node_modules/wonka/src/Wonka_sinks.bs.js b/node_modules/wonka/src/Wonka_sinks.bs.js
index c225bea..1a5e9a1 100644
--- a/node_modules/wonka/src/Wonka_sinks.bs.js
+++ b/node_modules/wonka/src/Wonka_sinks.bs.js
@@ -14,7 +14,7 @@ function subscribe(f) {
               state.ended = true;
               return ;
             }
-            if (signal.TAG) {
+            if (signal.TAG !== /* Start */0) {
               if (!state.ended) {
                 f(signal._0);
                 return state.talkback(/* Pull */0);
@@ -63,13 +63,13 @@ function toArray(source) {
             state.ended = true;
             return ;
           }
-          if (signal.TAG) {
-            state.values.push(signal._0);
-            return state.talkback(/* Pull */0);
+          if (signal.TAG === /* Start */0) {
+            var x = signal._0;
+            state.talkback = x;
+            return x(/* Pull */0);
           }
-          var x = signal._0;
-          state.talkback = x;
-          return x(/* Pull */0);
+          state.values.push(signal._0);
+          return state.talkback(/* Pull */0);
         }));
   if (!state.ended) {
     state.talkback(/* Close */1);
diff --git a/node_modules/wonka/src/Wonka_sources.gen.tsx b/node_modules/wonka/src/Wonka_sources.gen.tsx
index 1dcbcc4..db5d875 100644
--- a/node_modules/wonka/src/Wonka_sources.gen.tsx
+++ b/node_modules/wonka/src/Wonka_sources.gen.tsx
@@ -5,7 +5,7 @@
 // tslint:disable-next-line:no-var-requires
 const Wonka_sourcesBS = require('./Wonka_sources.bs');
 
-import {list} from '../src/shims/ReasonPervasives.shim';
+import {list} from './ReasonPervasives.shim';
 
 import {observerT as Wonka_types_observerT} from './Wonka_types.gen';
 
diff --git a/node_modules/wonka/src/web/WonkaJs.bs.js b/node_modules/wonka/src/web/WonkaJs.bs.js
deleted file mode 100644
index 671c800..0000000
--- a/node_modules/wonka/src/web/WonkaJs.bs.js
+++ /dev/null
@@ -1,273 +0,0 @@
-
-
-import * as Curry from "bs-platform/lib/es6/curry.js";
-import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
-import * as Wonka_callbag from "./Wonka_callbag.bs.js";
-import * as Wonka_operators from "../Wonka_operators.bs.js";
-import * as Wonka_observable from "./Wonka_observable.bs.js";
-
-function debounce(f) {
-  return function (source) {
-    return function (sink) {
-      var state = {
-        id: undefined,
-        deferredEnded: false,
-        ended: false
-      };
-      var $$clearTimeout$1 = function (param) {
-        var timeoutId = state.id;
-        if (timeoutId !== undefined) {
-          state.id = undefined;
-          clearTimeout(Caml_option.valFromOption(timeoutId));
-          return ;
-        }
-        
-      };
-      return Curry._1(source, (function (signal) {
-                    if (typeof signal === "number") {
-                      if (state.ended) {
-                        return ;
-                      }
-                      state.ended = true;
-                      var match = state.id;
-                      if (match !== undefined) {
-                        state.deferredEnded = true;
-                        return ;
-                      } else {
-                        return sink(/* End */0);
-                      }
-                    }
-                    if (signal.TAG) {
-                      if (!state.ended) {
-                        $$clearTimeout$1(undefined);
-                        state.id = Caml_option.some(setTimeout((function (param) {
-                                    state.id = undefined;
-                                    sink(signal);
-                                    if (state.deferredEnded) {
-                                      return sink(/* End */0);
-                                    }
-                                    
-                                  }), f(signal._0)));
-                        return ;
-                      } else {
-                        return ;
-                      }
-                    }
-                    var tb = signal._0;
-                    return sink({
-                                TAG: /* Start */0,
-                                _0: (function (signal) {
-                                    if (!state.ended) {
-                                      if (signal) {
-                                        state.ended = true;
-                                        state.deferredEnded = false;
-                                        $$clearTimeout$1(undefined);
-                                        return tb(/* Close */1);
-                                      } else {
-                                        return tb(/* Pull */0);
-                                      }
-                                    }
-                                    
-                                  })
-                              });
-                  }));
-    };
-  };
-}
-
-function delay(wait) {
-  return function (source) {
-    return function (sink) {
-      var active = {
-        contents: 0
-      };
-      return Curry._1(source, (function (signal) {
-                    if (typeof signal !== "number" && !signal.TAG) {
-                      return sink(signal);
-                    }
-                    active.contents = active.contents + 1 | 0;
-                    setTimeout((function (param) {
-                            if (active.contents !== 0) {
-                              active.contents = active.contents - 1 | 0;
-                              return sink(signal);
-                            }
-                            
-                          }), wait);
-                    
-                  }));
-    };
-  };
-}
-
-function throttle(f) {
-  return function (source) {
-    return function (sink) {
-      var skip = {
-        contents: false
-      };
-      var id = {
-        contents: undefined
-      };
-      var $$clearTimeout$1 = function (param) {
-        var timeoutId = id.contents;
-        if (timeoutId !== undefined) {
-          clearTimeout(Caml_option.valFromOption(timeoutId));
-          return ;
-        }
-        
-      };
-      return Curry._1(source, (function (signal) {
-                    if (typeof signal === "number") {
-                      $$clearTimeout$1(undefined);
-                      return sink(/* End */0);
-                    }
-                    if (signal.TAG) {
-                      if (!skip.contents) {
-                        skip.contents = true;
-                        $$clearTimeout$1(undefined);
-                        id.contents = Caml_option.some(setTimeout((function (param) {
-                                    id.contents = undefined;
-                                    skip.contents = false;
-                                    
-                                  }), f(signal._0)));
-                        return sink(signal);
-                      } else {
-                        return ;
-                      }
-                    }
-                    var tb = signal._0;
-                    return sink({
-                                TAG: /* Start */0,
-                                _0: (function (signal) {
-                                    if (signal) {
-                                      $$clearTimeout$1(undefined);
-                                      return tb(/* Close */1);
-                                    } else {
-                                      return tb(signal);
-                                    }
-                                  })
-                              });
-                  }));
-    };
-  };
-}
-
-function toPromise(source) {
-  return new Promise((function (resolve, param) {
-                Curry._1(Wonka_operators.takeLast(1)(source), (function (signal) {
-                        if (typeof signal === "number") {
-                          return ;
-                        } else if (signal.TAG) {
-                          return resolve(signal._0);
-                        } else {
-                          return signal._0(/* Pull */0);
-                        }
-                      }));
-                
-              }));
-}
-
-function interval(p) {
-  return function (sink) {
-    var i = {
-      contents: 0
-    };
-    var id = setInterval((function (param) {
-            var num = i.contents;
-            i.contents = i.contents + 1 | 0;
-            return sink({
-                        TAG: /* Push */1,
-                        _0: num
-                      });
-          }), p);
-    return sink({
-                TAG: /* Start */0,
-                _0: (function (signal) {
-                    if (signal) {
-                      clearInterval(id);
-                      return ;
-                    }
-                    
-                  })
-              });
-  };
-}
-
-function fromDomEvent(element, $$event) {
-  return function (sink) {
-    var addEventListener = (function (element, event, handler) {
-      element.addEventListener(event, handler);
-    });
-    var removeEventListener = (function (element, event, handler) {
-      element.removeEventListener(event, handler);
-    });
-    var handler = function ($$event) {
-      return sink({
-                  TAG: /* Push */1,
-                  _0: $$event
-                });
-    };
-    sink({
-          TAG: /* Start */0,
-          _0: (function (signal) {
-              if (signal) {
-                return removeEventListener(element, $$event, handler);
-              }
-              
-            })
-        });
-    return addEventListener(element, $$event, handler);
-  };
-}
-
-function fromPromise(promise) {
-  return function (sink) {
-    var ended = {
-      contents: false
-    };
-    promise.then(function (value) {
-          if (!ended.contents) {
-            sink({
-                  TAG: /* Push */1,
-                  _0: value
-                });
-            sink(/* End */0);
-          }
-          return Promise.resolve(undefined);
-        });
-    return sink({
-                TAG: /* Start */0,
-                _0: (function (signal) {
-                    if (signal) {
-                      ended.contents = true;
-                      return ;
-                    }
-                    
-                  })
-              });
-  };
-}
-
-var fromObservable = Wonka_observable.fromObservable;
-
-var toObservable = Wonka_observable.toObservable;
-
-var fromCallbag = Wonka_callbag.fromCallbag;
-
-var toCallbag = Wonka_callbag.toCallbag;
-
-export {
-  fromObservable ,
-  toObservable ,
-  fromCallbag ,
-  toCallbag ,
-  debounce ,
-  delay ,
-  throttle ,
-  toPromise ,
-  interval ,
-  fromDomEvent ,
-  fromPromise ,
-  
-}
-/* Wonka_observable Not a pure module */
diff --git a/node_modules/wonka/src/web/WonkaJs.gen.tsx b/node_modules/wonka/src/web/WonkaJs.gen.tsx
deleted file mode 100644
index e51fa07..0000000
--- a/node_modules/wonka/src/web/WonkaJs.gen.tsx
+++ /dev/null
@@ -1,46 +0,0 @@
-/* TypeScript file generated from WonkaJs.re by genType. */
-/* eslint-disable import/first */
-
-
-// tslint:disable-next-line:no-var-requires
-const Curry = require('bs-platform/lib/es6/curry.js');
-
-// tslint:disable-next-line:no-var-requires
-const WonkaJsBS = require('./WonkaJs.bs');
-
-import {callbagT as Wonka_callbag_callbagT} from './Wonka_callbag.gen';
-
-import {element as Dom_element} from '../../src/shims/Dom.shim';
-
-import {event as Dom_event} from '../../src/shims/Dom.shim';
-
-import {observableT as Wonka_observable_observableT} from './Wonka_observable.gen';
-
-import {operatorT as Wonka_types_operatorT} from '../../src/Wonka_types.gen';
-
-import {sourceT as Wonka_types_sourceT} from '../../src/Wonka_types.gen';
-
-export const fromObservable: <T1>(_1:Wonka_observable_observableT<T1>) => Wonka_types_sourceT<T1> = WonkaJsBS.fromObservable;
-
-export const toObservable: <T1>(_1:Wonka_types_sourceT<T1>) => Wonka_observable_observableT<T1> = WonkaJsBS.toObservable;
-
-export const fromCallbag: <T1>(_1:Wonka_callbag_callbagT<T1>) => Wonka_types_sourceT<T1> = WonkaJsBS.fromCallbag;
-
-export const toCallbag: <T1>(_1:Wonka_types_sourceT<T1>) => Wonka_callbag_callbagT<T1> = WonkaJsBS.toCallbag;
-
-export const debounce: <a>(f:((_1:a) => number)) => Wonka_types_operatorT<a,a> = WonkaJsBS.debounce;
-
-export const delay: <a>(wait:number) => Wonka_types_operatorT<a,a> = WonkaJsBS.delay;
-
-export const throttle: <a>(f:((_1:a) => number)) => Wonka_types_operatorT<a,a> = WonkaJsBS.throttle;
-
-export const toPromise: <a>(source:Wonka_types_sourceT<a>) => Promise<a> = WonkaJsBS.toPromise;
-
-export const interval: (p:number) => Wonka_types_sourceT<number> = WonkaJsBS.interval;
-
-export const fromDomEvent: (element:Dom_element, event:string) => Wonka_types_sourceT<Dom_event> = function (Arg1: any, Arg2: any) {
-  const result = Curry._2(WonkaJsBS.fromDomEvent, Arg1, Arg2);
-  return result
-};
-
-export const fromPromise: <a>(promise:Promise<a>) => Wonka_types_sourceT<a> = WonkaJsBS.fromPromise;
diff --git a/node_modules/wonka/src/web/Wonka_callbag.bs.js b/node_modules/wonka/src/web/Wonka_callbag.bs.js
index c2e13a0..5d425b0 100644
--- a/node_modules/wonka/src/web/Wonka_callbag.bs.js
+++ b/node_modules/wonka/src/web/Wonka_callbag.bs.js
@@ -39,7 +39,7 @@ function toCallbag(source) {
                     if (typeof signal === "number") {
                       return Curry._2(data, /* CALLBAG_END */2, undefined);
                     }
-                    if (signal.TAG) {
+                    if (signal.TAG !== /* Start */0) {
                       return Curry._2(data, /* CALLBAG_DATA */1, signal._0);
                     }
                     var talkbackFn = signal._0;
diff --git a/node_modules/wonka/src/web/Wonka_observable.bs.js b/node_modules/wonka/src/web/Wonka_observable.bs.js
index 1094858..9ee89f0 100644
--- a/node_modules/wonka/src/web/Wonka_observable.bs.js
+++ b/node_modules/wonka/src/web/Wonka_observable.bs.js
@@ -52,7 +52,7 @@ function toObservable(source) {
                   state.ended = true;
                   return complete();
                 }
-                if (signal.TAG) {
+                if (signal.TAG !== /* Start */0) {
                   if (!state.ended) {
                     next(signal._0);
                     return state.talkback(/* Pull */0);
